version: "3.8"
services:
    traefik:
        image: traefik:latest
        container_name: traefik
        restart: unless-stopped
        networks:
            - proxy
        ports:
            - 80:80
            - 443:443
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./config/traefik/traefik.yml:/traefik.yml:ro
            - ./config/traefik/acme-staging.json:/acme-staging.json
            - ./config/traefik/acme-prod.json:/acme-prod.json
            - ./config/traefik/configurations:/configurations
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.traefik-secure.entrypoints=websecure"
            - "traefik.http.routers.traefik-secure.rule=Host(`traefik.randomphp.com`)"
            - "traefik.http.routers.traefik-secure.service=api@internal"
            - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
        env_file:
            -   'cloudflare.env'
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    registry:
        image: registry:2
        container_name: registry
        restart: unless-stopped
        depends_on:
            - traefik
        networks:
            - proxy
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./data/registry:/var/lib/registry
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.registry-secure.entrypoints=websecure"
            - "traefik.http.routers.registry-secure.rule=Host(`registry.randomphp.com`)"
            - "traefik.http.routers.registry-secure.middlewares=user-auth@file"
            - "traefik.port=5000"
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    github-runner:
        image: myoung34/github-runner:latest
        container_name: github-runner
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /tmp/github-runner-mmsm2021:/tmp/github-runner-mmsm2021
        env_file:
            - github-runner.env
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./config/watchtower/config.json:/config.json
        environment:
            WATCHTOWER_LABEL_ENABLE: "true"
            WATCHTOWER_POLL_INTERVAL: 60
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    ofelia:
        image: mcuadros/ofelia:latest
        container_name: ofelia
        restart: unless-stopped
        command: daemon --docker
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    mongo:
        image: mongo:latest
        restart: unless-stopped
        container_name: mongo
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./data/mongo:/data/db
        env_file:
            - mongodb.env
        networks:
            - database
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    postgres:
        image: postgres:13.2-alpine
        restart: unless-stopped
        container_name: postgres
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
            - ./data/postgres:/var/lib/postgresql/data
        env_file:
            - postgres.env
        networks:
            - database
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    strapi:
        image: registry.randomphp.com/mmsm/strapi:latest
        restart: unless-stopped
        container_name: strapi
        networks:
            - proxy
            - database
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - ./data/strapi:/srv/app
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.strapi-secure.entrypoints=websecure"
            - "traefik.http.routers.strapi-secure.rule=Host(`cms.randomphp.com`)"
            - "traefik.http.services.strapi-secure.loadbalancer.server.port=3000"
        depends_on:
            - postgres
        env_file:
            - strapi.env
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        restart: unless-stopped
        depends_on:
            - traefik
        networks:
            - proxy
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./data/portainer:/data
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.portainer-secure.entrypoints=websecure"
            - "traefik.http.routers.portainer-secure.rule=Host(`portainer.randomphp.com`)"
            - "traefik.http.routers.portainer-secure.service=portainer"
            - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    cron:
        image: registry.randomphp.com/mmsm/cron:latest
        container_name: cron
        restart: unless-stopped
        depends_on:
            - registry
        labels:
            - "com.centurylinklabs.watchtower.enable=true"
            - "ofelia.enabled=true"
            - "ofelia.job-exec.cron-tick.schedule=@every 60s"
            - "ofelia.job-exec.cron-tick.command=php /var/www/html/scheduler.php"
        environment:
            JWKS_URI: "https://mmsm.eu.auth0.com/.well-known/jwks.json"
        volumes:
            - ./data/keys:/keys
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    react-frontend:
        image: registry.randomphp.com/mmsm/frontend:latest
        container_name: react-frontend
        restart: unless-stopped
        depends_on:
            - traefik
            - registry
        labels:
            - "com.centurylinklabs.watchtower.enable=true"
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.react-frontend-secure.entrypoints=websecure"
            - "traefik.http.routers.react-frontend-secure.rule=Host(`frandine.randomphp.com`)"
            - "traefik.http.services.react-frontend-secure.loadbalancer.server.port=5000"
        networks:
            - proxy
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
    mongo-express:
        image: mongo-express:latest
        restart: unless-stopped
        container_name: mongo-express
        depends_on:
            - traefik
            - mongo
        volumes:
            - /etc/localtime:/etc/localtime:ro
        env_file:
            - mongodb.env
        networks:
            - proxy
            - database
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=proxy"
            - "traefik.http.routers.mongo-secure.entrypoints=websecure"
            - "traefik.http.routers.mongo-secure.rule=Host(`mongo.randomphp.com`)"
            - "traefik.http.routers.mongo-secure.middlewares=user-auth@file"
            - "traefik.http.services.mongo-secure.loadbalancer.server.port=8081"
        logging:
            driver: "json-file"
            options:
                max-size: "30m"
                max-file: "3"
networks:
    proxy:
        external: true
    database:
        external: true